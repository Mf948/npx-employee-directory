[{"/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/index.js":"1","/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/App.js":"2","/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/reportWebVitals.js":"3","/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/components/nav.js":"4","/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/utils/API.js":"5","/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/components/search.js":"6","/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/utils/increment.js":"7","/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/components/table.js":"8"},{"size":546,"mtime":1617737441390,"results":"9","hashOfConfig":"10"},{"size":2183,"mtime":1617937687141,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1617658938670,"results":"12","hashOfConfig":"10"},{"size":265,"mtime":1617762286914,"results":"13","hashOfConfig":"10"},{"size":204,"mtime":1617666418433,"results":"14","hashOfConfig":"10"},{"size":316,"mtime":1617762300763,"results":"15","hashOfConfig":"10"},{"size":806,"mtime":1617937679166,"results":"16","hashOfConfig":"10"},{"size":729,"mtime":1617762249554,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1078y1s",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/index.js",[],["39","40"],"/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/App.js",["41"],"// import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport API from \"./utils/API\";\nimport Counter from \"./utils/increment\"\nimport Search from \"./components/search\"\nimport Nav from './components/nav'\nimport Table from './components/table';\nfunction App() {\n\n  const [directories, setDirectories] = useState([]);\n  const [number, setNumber] = useState(15)\n  const [searchName, setSearchName] = useState(\"\")\n\nuseEffect(() => {\n  API.directory(number)\n  .then(res => { \n    // console.log(res)\n    setDirectories(res.data.results)\n   console.log('idk',res.data.results)\n  } )\n  .catch(err => console.log(\"error\",err))\n  \n}, [number])\n\n\n\nconst  desendingOrder = (e) => {\n  \n let xyz= directories.sort(function (a, b) {\n\n    return a.name.first < b.name.first ? 1 : -1\n  });\n   console.log(\"xyz\",xyz)\n  setDirectories(xyz)\n  console.log(\"set\",directories)\n}\n\n\nconst asendingOrder = (e) => {\nlet abc =  directories.sort(function(a, b){\n    return a.name.first > b.name.first ? 1 : -1\n})\nconsole.log(\"abc\",abc)\n setDirectories(abc)\n\n }\n\n\nconst handleIncrement = () => {\n  setNumber(number + 1)\n \n}\n\nconst handleDecrement = () => {\n\n  if (number == 1 ){\n    console.log(\"dont go\")\n  }else{\n   setNumber(number - 1 )\n  }\n}\nconst handleChange = (e) =>{\n  setSearchName(e.target.value)\nlet updateEmployee = directories.filter(list => {\n  return list.name.first.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1\n})\n\nconsole.log('update',updateEmployee)\n\nsetDirectories(updateEmployee)\n  \n}\n\n  return (\n\n    <div className=\"App\">\n      <Nav/>\n       <Search \n       searchName= {searchName}\n      handleChange={handleChange}\n      />\n       <Counter \n        number={number} \n        handleIncrement={handleIncrement}\n        handleDecrement={handleDecrement}\n        asendingOrder={asendingOrder}\n        desendingOrder={desendingOrder}\n        />\n  {directories.map(employee =>(\n<Table\nimage={employee.picture.large}\nfirstName={employee.name.first}\nlastName={employee.name.last}\nage={employee.dob.age}\nemail={employee.email}\ncell={employee.cell}\nlocation={employee.location.country}\n/>\n     ))}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/reportWebVitals.js",[],"/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/components/nav.js",["42"],"import React from \"react\";\n\n\nconst Nav = () => (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-primary\">\n    <div className=\"d-flex w-50 order-0\">\n        <a className=\"navbar-brand mr-1\" >Employee Directory</a>\n    </div>\n</nav>\n)\n\nexport default Nav;","/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/utils/API.js",["43","44"],"\nimport axios from \"axios\";\n \nconst number = 5\nconst BASEURL = `https://randomuser.me/api/?results=`;\n\nexport default {\n    directory: function(number){\n        return axios.get(BASEURL +  number)\n    }\n}","/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/components/search.js",[],"/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/utils/increment.js",[],"/Users/mateoferreira/Desktop/homework/new/npx-employee-directory/src/components/table.js",["45"],"import React from \"react\";\n\n\nfunction Table(props){\n    return(\n        <div>\n            <table className=\"table table-dark\">\n  <thead>\n    <tr>\n    <th scope=\"col\">Image</th>\n      <th scope=\"col\">Firstname</th>\n      <th scope=\"col\">Lastname</th>\n      <th scope=\"col\">Age</th>\n      <th scope=\"col\">email</th>\n      <th scope=\"col\">phoneNumber</th>\n      <th scope=\"col\">Location</th>\n\n      \n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    <th><img src = {props.image}></img></th> \n    <td>{props.firstName}</td>\n    <td>{props.lastName}</td>\n    <td>{props.age}</td>\n    <td>{props.email}</td>\n    <td>{props.cell}</td>\n    <td>{props.location}</td>\n    </tr>\n\n  </tbody>\n</table>\n        </div>\n    )\n}\n\nexport default Table; ",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":57,"column":14,"nodeType":"52","messageId":"53","endLine":57,"endColumn":16},{"ruleId":"54","severity":1,"message":"55","line":7,"column":9,"nodeType":"56","endLine":7,"endColumn":43},{"ruleId":"57","severity":1,"message":"58","line":4,"column":7,"nodeType":"59","messageId":"60","endLine":4,"endColumn":13},{"ruleId":"61","severity":1,"message":"62","line":7,"column":1,"nodeType":"63","endLine":11,"endColumn":2},{"ruleId":"64","severity":1,"message":"65","line":23,"column":9,"nodeType":"56","endLine":23,"endColumn":34},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'number' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]